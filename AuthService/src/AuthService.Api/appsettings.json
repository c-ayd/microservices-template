{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware": "None",
      "Microsoft.EntityFrameworkCore": "None",
      "Microsoft.AspNetCore.DataProtection": "Information",
      "Grpc.AspNetCore.Server": "None"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "Endpoints": {
      "Rest": {
        "Url": "http://0.0.0.0:5080",
        "Protocols": "Http1"
      },
      "Grpc": {
        "Url": "http://0.0.0.0:5081",
        "Protocols": "Http2"
      }
    }
  },
  "Cors": {
    "DefaultPolicy": {
      "Origins": [
        "https://www.example.com"
      ]
    }
  },
  "FlexLog": {
    "BufferLimit": 10000,
    "TimerInSeconds": 5,
    "LogDetails": {
      "Claims": {
        "IncludedTypes": [
          "NameIdentifier",
          "Role",
          "EmailVerification"
        ]
      },
      "Headers": {
        "IncludedKeys": [
          "Accept-Language",
          "User-Agent"
        ],
        "Limit": {
          "Length": 512,
          "Strategy": "Slice"
        }
      },
      "RequestBody": {
        "RedactedKeys": [
          "Email",
          "Password",
          "NewEmail",
          "NewPassword"
        ],
        "IgnoredRoutes": [
          "/AdminGrpcService"
        ]
      },
      "ResponseBody": {
        "RedactedKeys": [
          "AccessToken"
        ],
        "IgnoredRoutes": [
          "/AdminGrpcService"
        ]
      },
      "QueryString": {
        "Limit": {
          "Length": 512
        }
      }
    }
  },
  "RateLimiter": {
    "TokenBucket": {
      "PolicyName": "Token Bucket Rate Limiter",
      "TokenLimit": 10,
      "QueueLimit": 0,
      "ReplenishmentPeriodInSeconds": 1,
      "TokenPerReplenishmentPeriod": 10
    }
  },
  "TemplateLinks": {
    "EmailVerification": "http://www.example.com/verify-email?token=",
    "ResetPassword": "http://www.example.com/reset-password?token="
  }
  // NOTE: The following configurations show the structure of the secrets.
  // DO NOT PUT your secrets in the code. Instead, use environment variables or
  // user secrets or any other secret manager. This is just here to show how to
  // configure your secrets in order to run the application. 
  // 
  // "ConnectionStrings": {
  //   "App": "",
  //   "RabbitMq": "",
  //   "Log": ""
  // },
  // "Jwt": {
  //   "SecretKey": "",
  //   "Issuer": "",
  //   "Audience": "",
  //   "AccessTokenLifeSpanInMinutes": 0,
  //   "RefreshTokenLifeSpanInDays": 0
  // },
  // "Crypto": {
  //   "AesGcm": {
  //     "Key": ""
  //   }
  // },
  // "TokenLifetimes": {
  //   "EmailVerificationLifetimeInHours": 0,
  //   "ResetPasswordLifetimeInHours": 0
  // },
  // "AccountLock": {
  //   "FailedAttemptsForFirstLock": 0,
  //   "FailedAttemptsForSecondLock": 0,
  //   "FirstLockTimeInMinutes": 0,
  //   "SecondLockTimeInMinutes": 0
  // },
  // "SeedData": {
  //   "AuthDbContext": {
  //     "AdminEmails": [
  //       ""
  //     ]
  //   }
  // },
  // "DataProtection": {
  //   "FilePath": ""
  // }
}
